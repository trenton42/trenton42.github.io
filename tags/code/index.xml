<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code on Trenton Broughton</title>
    <link>https://ikso.us/tags/code/</link>
    <description>Recent content in code on Trenton Broughton</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Jan 2019 21:48:16 -0500</lastBuildDate><atom:link href="https://ikso.us/tags/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go For a Loop</title>
      <link>https://ikso.us/posts/go-for-a-loop/</link>
      <pubDate>Tue, 15 Jan 2019 21:48:16 -0500</pubDate>
      
      <guid>https://ikso.us/posts/go-for-a-loop/</guid>
      <description>Go, like many languages, has a for loop. The snippet below can help to understand the versatility of these loops. This mechanism goes well beyond simply counting integers, but can be used to implement any number of looping patterns. The important thing to remember is that the second expression in the for loop definition controls the loop, and can be used with any function or method that returns a bool, or any expression that evaluates to a bool.</description>
    </item>
    
    <item>
      <title>Automatic Hugo Site Deployments With CircleCI</title>
      <link>https://ikso.us/posts/automatic-hugo-deployments/</link>
      <pubDate>Sun, 30 Dec 2018 17:58:01 -0500</pubDate>
      
      <guid>https://ikso.us/posts/automatic-hugo-deployments/</guid>
      <description>Generating static sites with Hugo is easy enough, but I wanted something a little more automated. I also wanted to deploy my site to Github Pages from another computer (or even my phone) without needing to run the hugo command locally and pushing the generated code back to Github. If you are unfamiliar with Github Pages, check out the introduction.
Prep Work &amp;ndash; Getting Things Set Up CircleCI uses Docker containers to run CI jobs, so I knew that I would need a Hugo image to build my site.</description>
    </item>
    
    <item>
      <title>Migrating From Blogger</title>
      <link>https://ikso.us/posts/migrating-from-blogger/</link>
      <pubDate>Wed, 05 Dec 2018 21:44:57 -0500</pubDate>
      
      <guid>https://ikso.us/posts/migrating-from-blogger/</guid>
      <description>Yesterday, I suddenly remembered that I had written several posts on Blogger and forgotten all about them. I decided to migrate the content over to Hugo and take advantage of Google&amp;rsquo;s Takeout program.
I wasn&amp;rsquo;t really sure what I would get when exporting a blog, but I was not thrilled when I downloaded my content. Instead of a directory of HTML files, I received a single ATOM feed of all of my posts.</description>
    </item>
    
    <item>
      <title>And now, Hugo!</title>
      <link>https://ikso.us/posts/hugo/</link>
      <pubDate>Fri, 12 Jan 2018 21:41:07 -0500</pubDate>
      
      <guid>https://ikso.us/posts/hugo/</guid>
      <description>After forgetting about this for, hmm, three years, I figured it was time to start writing again. And of course, I can&amp;rsquo;t just write. I also have to start over with everything. So this time around I am using Hugo for my static site engine.
I enjoy using Hugo as it has some nice tricks up its sleeve while being quite easy to get running.
Recently, I have also been using VSCode, and to make it a little easier to generate posts I use the following launch.</description>
    </item>
    
    <item>
      <title>Attaching StringIO Data to a Mailgun Message</title>
      <link>https://ikso.us/posts/2013-12-19-22-48/</link>
      <pubDate>Thu, 19 Dec 2013 22:53:00 -0500</pubDate>
      
      <guid>https://ikso.us/posts/2013-12-19-22-48/</guid>
      <description>Recently i started using Mailgun for our outgoing messages. They have a very nice	API, and take a lot of the heavy lifting out of creating multipart messages.
If you are using requests (or treq) to send the messages through their REST API, however, you may have noticed that you must specify &amp;ldquo;attachment&amp;rdquo; as the key, and an open file handle as the value. This works great if you are sending files from the filesystem, but if you need to send generated or in memory data as a file attachment, it just doesn&amp;rsquo;t work.</description>
    </item>
    
    <item>
      <title>A Picture is worth how many words? Part 1</title>
      <link>https://ikso.us/posts/2013-12-05-13-01/</link>
      <pubDate>Thu, 05 Dec 2013 13:01:00 -0500</pubDate>
      
      <guid>https://ikso.us/posts/2013-12-05-13-01/</guid>
      <description>i was playing around with some imaging code, and started wondering what it would look like to create some images out of text. i have worked with stenography in the past, but this time i didn&amp;rsquo;t want to hide the text, i wanted to pack the image with it.
First things first, i need some text. Time to turn to trusty Project Gutenberg. i will be using the text of Moby Dick for this project.</description>
    </item>
    
    <item>
      <title>Theme Uploaded</title>
      <link>https://ikso.us/posts/2013-11-18-09-34/</link>
      <pubDate>Mon, 18 Nov 2013 09:34:00 -0500</pubDate>
      
      <guid>https://ikso.us/posts/2013-11-18-09-34/</guid>
      <description>I whipped up this theme for liquidluck recently. It is based on Bootstrap 3, and doesn&amp;rsquo;t contain many bells or whistles (as you can see).
Clone it here https://github.com/trenton42/liquidluck-theme-bootstrap3
i will (hopefully) be working on some improvements in the future.</description>
    </item>
    
  </channel>
</rss>
