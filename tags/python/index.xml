<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Trenton Broughton</title>
    <link>https://ikso.us/tags/python/</link>
    <description>Recent content in python on Trenton Broughton</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Dec 2013 22:53:00 -0500</lastBuildDate>
    
	<atom:link href="https://ikso.us/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Attaching StringIO Data to a Mailgun Message</title>
      <link>https://ikso.us/posts/2013-12-19-22-48/</link>
      <pubDate>Thu, 19 Dec 2013 22:53:00 -0500</pubDate>
      
      <guid>https://ikso.us/posts/2013-12-19-22-48/</guid>
      <description>Recently i started using Mailgun for our outgoing messages. They have a very nice	API, and take a lot of the heavy lifting out of creating multipart messages.
If you are using requests (or treq) to send the messages through their REST API, however, you may have noticed that you must specify &amp;ldquo;attachment&amp;rdquo; as the key, and an open file handle as the value. This works great if you are sending files from the filesystem, but if you need to send generated or in memory data as a file attachment, it just doesn&amp;rsquo;t work.</description>
    </item>
    
    <item>
      <title>A Picture is worth how many words? Part 1</title>
      <link>https://ikso.us/posts/2013-12-05-13-01/</link>
      <pubDate>Thu, 05 Dec 2013 13:01:00 -0500</pubDate>
      
      <guid>https://ikso.us/posts/2013-12-05-13-01/</guid>
      <description>i was playing around with some imaging code, and started wondering what it would look like to create some images out of text. i have worked with stenography in the past, but this time i didn&amp;rsquo;t want to hide the text, i wanted to pack the image with it.
First things first, i need some text. Time to turn to trusty Project Gutenberg. i will be using the text of Moby Dick for this project.</description>
    </item>
    
  </channel>
</rss>